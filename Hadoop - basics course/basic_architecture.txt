NODE IS A COMPUTER, RACK IS A SET OF 30/40 NODES IN A VICINITY AND CONNECTED TO SAME NETWORK

BEFORE HADOOP 2.2:
    DISTRIBUTED FILE SYSTEM AS:
    - HADOOP DISTRIBUTED FILE SYSTEM (HDFS)
    - IBM SPECTRUM SCALE
    MAPREDUCE ENGINE:
    - FRAMEWORK FOR PERFORMING CALCULATIONS FOR THE DATA IN THE FILE SYSTEM
    - HAS RESOURCE MANAGER AND SCHEDULER

    HDFS RUNS ON TOP OF THE EXISTING FILE SYSTEM ON EACH NODE AND NOT POSIX COMPLIANT
    IT ACHIEVES RELIABILITY THROUGH DUPLICATION
    HADOOP HAS NO RANDOM ACCESS AND IT IS THEREFORE OPTIMIZED BY USING LARGE FILES, SINCE THIS MINIMIZES THE SEARCH OPERATION ON THE FILE SYSTEM, WHICH ARE VERY COSTLY
    HADOOP USES SEQUENTIAL DATA ACCES OVER BLOCKS OF DATA

    HDFS FILE BLOCKS ARE NOT THE SAME AS OPERATING SYSTEM FILE BLOCKS, BUT MAY CONSIST OF MULTIPLE NODE BLOCKS
    BLOCKS ARE 64-128 MB
    SINCE BLOCKS ARE FIXED IN SIZE, THEY ARE EASY TO DISTRIBUTE
    BLOCKS ARE ALSO EASILY DUPLICATED
    THE REPLICATION FACTOR CAN BE SET FOR EACH FILE

    MAPREDUCE CONSISTS OF TWO OPERATIONS THAT CAN BE REPEATEDLY APPLIED TO DATA:
    - MAP TRANSFORMATION
    - REDUCE TRANSFORMATION
    MAPREDUCE JOB ARE MAPREDUCE OPERATIONS THAT RUN PARALLELLY

    THE TYPE OF NODES ARE: HDFS (NAMENODE, DATANODE, SECONDARY NAMENODE, CHECKPOINT NODE, BACKUP NODE) OR MAPREDUCE V1 NODES (JOB TRACKER, TASK TRACKER)
    CLIENT COMMUNICATED WITH JOB TRACKER, NAMENODE OR DATANODE
    THERE IS ONE NAMENODE PER CLUSTER, WHERE METADATA OF THE FILES ARE STORED AND THE FILE SYSTEM NAMESPACE, BUT DOES NOT STORE OR PROCESS DATA
    SINCE THERE IS ONLY ONE, ITS CONTENT SHOULD BE COPIED/MIRRORED AND ITS RAM SHOULD BE BIG
    DATANODES PERIODICALLY REPORT TO THE NAMENODE WHICH BLOCKS IT STORES
    THERE IS ONLY ONE JOBTRACKER PER CLUSTER AND SCHEDULES THE MAP AND REDUCE TASKS TO TASKTRACKERS, WHICH ARE LOCATED AT THE NODES
    A JOBTRACKER ALSO TAKES FAILED TASKS INTO ACCOUNT AND RESCHEDULES THESE

AFTER HADOOP 2.2:
    INTRODUCED MAPREDUCE V2 ALSO CALLED YARN (YET ANOTHER RESOURCE NEGOTIATOR)
    DATANODES STILL EXIST, BUT JOBTRACKERS AND TASKTRACKERS NO LONGER DO
    YARN IS EXTERNAL TO ANY FRAMEWORK/CLUSTER
    MAPREDUCE V1 IS STILL SUPPORTED, SO YARN IS NOT OBLIGED
    YARN PROVIDES:
    - GENERIC SCHEDULING AND RESOURCE MANAGEMENT
    - MORE EFFICIENT SCHEDULING AND WORKLOAD MANAGEMENT, (WORKLOAD MANAGEMENT WAS DONE BY ADMINISTRATOR IN MAPREDUCE V1)

    WITH YARN, EACH NODE HAS A NODE MANAGER THAT DECIDES ITS CAPABILITIES AND SCALES USING THIS INFORMATION; THE NODE MANAGERS COMMUNICATE WITH THE RESOURCE MANAGER WHICH CAN BE COMMUNICATED WITH BY THE CLIENT
    WHEN AN APPLICATION STARTS, THE RESOURCES ARE DISTRIBUTED BY THE RESOURCE MANAGER
    THE RESOURCES ARE ASSIGNED TO CONTAINERS (MINICLUSTERS OF SEVERAL NODES/RACKS)
    
    THE NAMENODE IS NOW ALSO DISTRIBUTED INTO ONE ACTIVE AND ONE STANDBY NAMENODE
    JOURNAL NODES (WHICH SHOULD BE >= THREE AND AN ODD NUMBER) SCAN THE NAMENODES TO DECIDE WHICH SHOULD BE ACTIVE AND TO SEE WHETHER ONE BROKE DOWN
    ALSO COMPLETELY DISTRIBUTED NAMENODES CAN BE USED, WHERE EACH NAMENODE TRACKS SPECIFIC FILES (AND, THUS, SPECIFIC BLOCKS)
    
    SINCE THE OPERATIONS ARE ALSO PERFORMED BY CONTAINERS AND THUS BY RACKS, THE OPERATIONS ARE PERFORMED CLOSE TO THE DATA AND THE HIGH INTERNAL BANDWIDTH OF THE RACKS CAN BE UTILIZED

FOR ADDING FILES TO THE HDFS-SYSTEM: CLIENT SENDS 'CREATE' REQUEST TO THE NAMENODE(S), WHICH CHECKS WHETHER IT ALREADY EXISTS; IF IT DOES NOT, THE NAMENODE DECIDES THE FIRST DATANODE WHERE THE FIRST BLOCK IS WRITTEN TO (AND REPLICATED TO TWO OTHER NODES THAT ARE ON ANOTHER RACK THAN THE FIRST BLOCK BUT BOTH ON THE SAME RACK)
PIPELINES ARE CREATED BETWEEN THE THREE BLOCKS AND ACKNOWLEDGMENT PACKETS ARE SENT AT THE END TO ENSURE THE PROCESS WENT WELL

HDFS HAS COMMAND LINE INTERFACE THAT IS VERY SIMILAR TO LINUX TERMINAL UTILITIES
ALL COMMANDS BEGIN WITH: hdfs dfs -, FOR EXAMPLE: hdfs dfs -ls
HDFS IS NOT POSIX-COMPLIANT BUT IT SUPPORTS MANY OF THE COMMANDS; THERE ARE A FEW SPECIFIC HADOOP-COMMANDS SUCH AS put AND copyFromLocal WHICH COPY FILES FROM LOCAL FILESYSTEM TO ANOTHER FILESYSTEM OR get AND copyToLocal WHICH DOES THE OPPOSITE; getMerge IS ANOTHER COMMAND THAT MERGES MULTIPLE GET-FILES
GUI'S FOR HDFS ARE, FOR EXAMPLE, IBM'S AMBARI CONSOLE
