SWARMS APPEAR, SINCE CONTAINERS ARE EASILY CREATED AND, HENCE, LARGE GROUPS ARE ALSO EASILY CREATED. THESE NEED TO BE MANAGED
THIS CAN BE DONE IN SWARM MODE, WHICH IS DOCKER'S BUILT-IN ORCHESTRATION TOOL AND CLUSTERING SOLUTION
SWARM BRINGS TOGETHER MULTIPLE OPERATING SYSTEM AND WORKS ACROSS SEVERAL NODES TO MANAGE ALL CONTAINERS FROM A SINGLE POINT
TO SEE ALL COMMAND AVAILABLE FOR DOCKER SWARM: 'docker swarm' (NEXT TO SIMPLY THE DOCKER COMMAND: 'docker' AND THE DOCKER COMPOSE COMMAND: 'docker-compose')
TO CHECK WHETHER SWARMS ARE ACTIVE: 'docker info'
TO INITIALIZE DOCKER SWARMS: 'docker swarm init'; THIS CREATES CERTIFICATES THAT ENABLE COMMUNICATION, SUCH AS ROOT SIGNING CERTIFICATE, CERTIFICATE FOR FIRST MANAGER NODE AND JOIN TOKENS FOR WORKER NODES, ALSO THE RAFT DATABASE IS CREATED (WHICH IS AUTMOATICALLY ENCRYPTED), WHERE ALL CERTIFICATES AND CONFIGURATION SETTINGS ARE STORED

DOCKER SWARM MANAGES THE AUTOMATIC CREATION AND RECREATION OF CONTAINERS, REPLACEMENT OF CONTAINERS THAT FAIL, AUTOMATIC SCALING, REPLACEMENT OF CONTAINERS WITHOUT DOWNTIME (CALLED BLUE/GREEN DEPLOY, REPLACEMENT WITHOUT DOWNTIME), TRACKING WHERE NEW CONTAINERS ARE LAUNCHED, CREATION/MAINTENANCE OF CROSS-NODE VIRTUAL NETWORKS, CHECK RELIABILITY AND TRUSTWORTHINESS OF SERVERS FOR THE CONTAINERS TO RUN ON, HOW TO GET RIGHT KEYS/PASSWORDS TO THE RIGHT CONTAINER (AND NOT ANYWHERE ELSE)

IN SWARM THERE ARE MANAGER NODES (WHICH SHARE A DATABASE, THE RAFT CONSENSUS DATABASE, FOR STORAGE OF THEIR TRAFIC) AND WORKER NODES
THE MANAGER NODES HAVE CERTIFICATES AND AUTHORITY FOR THEIR RESPECTIVE WORKER NODES
MANAGERS CAN THEMSELVES BE WORKERS AS WELL AND NODES CAN BE PROMOTED, DEMOTED INTO MANAGERS OR WORKERS
ALL THE NODES NEED TO RUN THE SAME DOCKER VERSION TO BE ABLE TO COMMUNICATE
THERE CAN BE ONLY ONE LEADER IN THE SWARM, WHICH IS A SPECIAL MANAGER

DOCKER SERVICES CREATES A SERVICE OBJECT, CREATES THE TASKS WITHIN THE SERVICE, ALLOCATES IP ADDRESSES TO TASKS, ASSIGNS NODE TO TASKS AND MONITORS THE WORKERS
ALL INFORMATION OF THIS LOOP IS STORED IN THE RAFT CONSENSUS DATABASE
WORKER CHECKS IN ON THE MANAGER (SO IT CAN BE MONITORED), ASKING FOR NEW TASKS, AND EXECUTES THE ASSIGNED TASK
THE HIERARCHY IS: A SERVICE IS STARTED, A WORKER/THE WORKERS START THE CONTAINERS AND THE CONTAINERS EXECUTE A TASK (WHICH IS A PART OF THE SERVICE); EACH TASK WILL START A CONTAINER
TO INVESTIGATE WHAT COMMANDS ARE AVAILABLE WITH RESPECT TO SERVICES: 'docker service'
FOR MULTIPLE NODES OR WITHIN A SWARM, 'docker service' REPLACE THE 'docker run'-COMMAND
SERVICES GET ID'S AS WELL AS CONTAINERS (SO THE REPLACEMENT ALSO HOLDS THERE)
TO CHECK WHAT CONTAINERS ARE RUN AS PART OF THE TASK: 'docker service ps [SERVICE NAME OR ID]'
TO CHANGE TO NUMBER OF TASKS WITHIN A SERVICE: 'docker service update [SERVICE NAME OR ID] --replicas [NUMBER OF REPLICAS THAT NEED TO BE EXECUTED]'
FOR REGULAR CONTAINERS, A SIMILAR COMMAND EXISTS (SO THE REPLACEMENT ALSO HOLDS HERE): 'docker update' (FOR UPDATING A CONTAINER/CONTAINERS WITH RESPECT TO THE IMAGE, WITHOUT DElETING IT)
SWARMS AUTOMATICALLY RECREATE TASKS/CONTAINERS WHEN AN ERROR OCURRED, SO THAT THE TASK IS BEING EXECUTED. THIS HAPPENS FULLY AUTOMATIC

TO CREATE SWARM-WIDE BRIDGE NETWORKS (SPANNING, POSSIBLY, MULTIPLE NODES) USE OVERLAY NETWORKS, THIS IS ONLY A NETWORK FOR CONTAINER-TO-CONTAINER COMMUNICATION
EACH SERVICE CAN BE CONNECTED TO AS MANY OVERLAY NETWORKS AS DESIRED (INCLUDING ZERO)
TO CREATE OVERLAY NETWORK: 'docker network create --driver overlay [NAME OF THE NETWORK]'
THE ROUTING MESH, IN TURN, REROUTES TASKS OVER THE OVERLAY NETWORK, SO THAT THE RIGHT TASK ENDS UP AT THE RIGHT NODE (FOR EXAMPLE: OPENING A WEBSITE CAN BE DONE ON ALL THREE NODES WHEN THESE ARE CONNECTED VIA AN OVERLAY NETWORK)
NICELY PUT: IT DISTRIBUTES PACKETS FOR A SERVICE TO THE RIGHT TASKS WITHIN THAT SERVICE

SERVICES ALSO SUPPORT SECRETS, WHICH IS ANY INFORMATION THAT NEEDS TO BE HIDDEN AND DISPLACED WITHIN THE INTERNAL NETWORK/OVERLAY NETWORK
THE SWARM RAFT DATABASE IS ENCRYPTED BY DEFAULT, ONLY MANAGER NODES HAVE THE KEY TO THAT DATABASE
SECRETS ARE STORED WITHIN THE SWARM/RAFT DATABASE AND THEN ASSIGNED TO A SERVICE
SECRETS ARE A SWARM-ONLY FEATURE
TO SEE OR USE SECRETS, USE: 'docker secret'

DOCKER SWARMS ALSO SUPPORT STACKS, WHICH IS A LAYER OF ABSTRACTION THAT TAKES IN THE END RESULT (GOAL THAT THE USER LIKES TO ACHIEVE) AND REALIZES THAT BEHIND THE SCENES (INCLUDING SERVICES, NETWORKS, VOLUMES AND SECRETS)
THIS IS USED FOR PRODUCTION, RATHER THAN DEVELOPMENT, WHERE SERVICES SUFFICED FOR TESTING EVERYTHING; LIKEWISE 'docker-compose' IS NOT USED FOR PRODUCTION PURPOSES, BUT FOR DEVELOPMENT ONLY
STACKS CONSIST OF MUTLIPLE SERVICES, OF WHICH ALL VOLUMES AND NETWORKS ARE PROPERLY MANAGED
INSTEAD OF USING SERVICES, STACKS CAN BE USED BY: 'docker stack deploy'
