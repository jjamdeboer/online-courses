#!/bin/bash

# GENERATING RANDOM PASSWORDS IS BEST DONE WITH CHECKSUMS OR HASH FUNCTIONS, SUCH AS 'sha256sum' OR 'md5sum'
# RANDOM CHARACHTERS CAN BE GENERATED WITH THE ENVIRONMENT VARIABLE $RANDOM
echo $RANDOM; echo $RANDOM
DATE=$(date +%s%N)
echo $DATE
echo $DATE | sha256sum | head -c8  
echo
# echo | echo | (echo "${PASSWORD}" && cat) | (echo "${PASSWORD}" && cat) | sudo passwd durk 

# PARAMETERS ARE VARIABLES THAT ARE USED INSIDE SHELL SCRIPTS, ARGUMENTS ARE VARIABLES GIVEN TO THE SCRIPT WITH THE SHELL
# THE NAME OF THE SCRIPT ITSELF IS STORED IN $0, THE FIRST ARGUMENT IS STORED IN $1, ETC., THE NUMBER OF ARGUMENTS IS STORED IN $#, THE ARGUMENTS THEMSELVES ARE STORED IN $@
echo $0 $1 $# $@
# A MINOR NONIMPORTANT POINT IS TO NOTE THAT $0 STORES THE EXECUTED COMMAND (FOR EXAMPLE ./durk.sh) IF THE COMMAND IS NOT IN $PATH, BUT STORES THE FULL PATH IF IT IS IN $PATH (FOR EXAMPLE usr/bin/local/durk.sh)
# SYNTAX FOR FOR-LOOP IS: for [name] in [LIST]; do [COMMANDS]; done
for DURK in $@; do echo $DURK; done
# SYNTAX FOR WHILE-LOOPS IS: while [CONDITION]; do [COMMANDS]; done
while [[ $RANDOM -gt 1000 ]]; do echo DUUUUUUUUUUUUUUUURKUDUUUUUUUUURK; done
# NOTE THAT THERE EXISTS A 'true' AND A 'false' FUNCTION IN BASH
if true; then echo TRUE; fi
if false; then echo FALSE; fi

# THERE EXISTS A COMMAND THAT GIVES A DELAY, WHICH IS 'sleep', IT CAN BE GIVEN A NUMBER AND THEN A MEASURE ('d' FOR 'DAYS' AND 's' FOR 'SECONDS' AND SOME OTHERS)
sleep 5s

# GENERATING PASSWORDS FOR EACH INPUT, ASSUMING THESE ARE USERS
# THIS ASSUMES THAT THE FILE IS EXECUTED BY THE ROOT, OTHERWISE THE PASSWORD CANNOT BE CHANGED
for USERNAME in $@; do DURK=$(echo $DATE | sha256sum | head -c8); echo | echo | (echo "${DURK}" && cat) | (echo "${DURK}" && cat) | passwd $USERNAME; done

exit 0
