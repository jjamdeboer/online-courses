#!/bin/bash

# THREE TYPES OF INPUT AND OUTPUT: STANDARD INPUT STANDARD OUTPUT (EXIT 0) AND STANDARD ERROR (EXIT != 0)
# REDIRECTING OUTPUT TO A FILE '>', '>>' FOR APPENDING; FOR REDIRECTING OUTPUT AS INPUT TO ANOTHER COMMAND, USE '<' OR '<<'
ls -l / > durk.txt
echo bin laden >> durk.txt
grep bin < durk.txt
# WHEN WORKING WITH REDIRECTION, MAKE SURE TO HAVE WRITE PERMISSION WHEN OUTPUT IS REDIRECTED THERE AND READ PERMISSION OF INPUT IS TAKEN FROM THERE
# FILE DESCRIPTORS ARE 0 STANDARD INPUT, 1: STANDARD OUTPUT, 2: STANDARD ERROR, THEREFORE, PREVIOUS COMMANDS CAN ALSO BE WRITTEN AS:
ls -l / 1> durk.txt
# AND SOMETHING EXTRA TO MAKE ERRORS ALSO REDIRECT, THE '&' APPENDS THE STANDARD ERROR (IN THIS CASE) TO THE STANDARD OUTPUT:
ls -l /bin/* /bin/bin 1> durk.txt 2>&1
# SAME AS (STANDARD OUTPUT AND ERROR SWITCHED):
ls -l /bin/* /bin/bin 2> durk.txt 1>&2
# SAME AS (NEW SYNTAX):
ls -l /bin/* /bin/bin &> durk.txt
echo bin laden 1>> durk.txt
grep bin 0< durk.txt

# STANDARD ERROR DOES NOT FLOW THROUGH THE PIPE OPERATOR, SO ONLY '1' FLOWS THROUGH AND IS USED AS '0' IN THE OTHER COMMAND, DEMONSTRATED BY 'cat -n'
ls . ./murkudurk | sort | cat -n
# IN CASE THE STANDARD ERROR SHOULD ALSO BE PUT THROUGH THE PIPE, THE STANDARD ERROR NEEDS TO BE APPENDED:
ls . ./murkudurk 2>&1 | sort | cat -n
# THIS IS THE SAME AS:
ls . ./murkudurk |& sort | cat -n

# THERE EXISTS A NULL DEVICE, WHICH FUNCTIONS AS A BLACK HOLE: EVERYTHING THAT IS FED IN DISAPPEARS
ls . ./murkudurk &> /dev/null
# DO NOTE THAT THE EXIT STATUS OF PREVIOUS COMMAND WILL BE VISIBLE:
echo $?

exit 0
