/* VIEWS STORES A SELECT-QUERY, FOR EITHER ACCESS REGULATIONS, UP-TO-DATE SCHEMA CHANGES AND SIMPLICITY */
/* A VIEW GENERALLY DOES NOT STORE DATA, WITH THE EXCEPTION OF A MATERIALIZED VIEW */
/* SYNTAX: CREATE VIEW view_name AS select_query... WITH CHECK OPTION */
/* ONE CAN REPLACE VIEWS, WITH THE SAME COLUMN NAMES + DATA TYPES AS PREVIOUSLY, BUT WITH OPTION TO ADD 
ADDITIONAL COLUMNS AT THE END OF THE QUERY; ADDITIONAL SYNTAX: CREATE OR REPLACE view_name AS ... */
/* SIMILARLY, ONE CAN DROP IT USING: DROP VIEW IF EXISTS view_name; */
/* IF VIEW IS BUILT ON A SINGLE TABLE WITHOUT AGGREGATION OF WINDOW-FUNCTIONS, ONE CAN EVEN USE THE 
VIEW TO UPDATE/DELETE/INSERT DATA IN THE UNDERLYING TABLE */
/* NOTE THAT ONE CAN RESTRICT THE CHANGEABILITY OF THE DATA WITH THE 'WITH CHECK OPTION' IN THE 
VIEW-DEFINITION, SINCE THAT FIRST CHECKS WHETHER A VIEW-CONSTRAINT (IN THE WHERE-CLAUSE) IS 
SATISFIED BEFORE ALTERING THE CONTENT OF THE VIEW/UNDERLYING TABLE */
/* TO CREATE MATERIALIZED VIEWS, USE: CREATE OR REPLACE MATERIALIZED VIEW view_name AS select_query WITH [NO] DATA; */
/* TO REFRESH ITS DATA, USE: REFRESH MATERIALIZED VIEW view_name [CONCURRENTLY]; */
/* LIKEWISE, DROPPING IT GOES: DROP MATERIALIZED IF EXISTS VIEW view_name; */
