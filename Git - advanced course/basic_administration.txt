THERE ARE THREE TYPES OF FILES FOR GIT: COMMITS, BLOBS AND TREES
- COMMITS ARE THE COMMITS/HASHES
- BLOBS ARE THE CONTENT OF THE FILES
- TREES ARE THE LINK BETWEEN THE BLOBS AND THE FILENAMES

THERE IS A WEAKNESS IN THIS APPROACH: EVERYTHING IS COPIED AT EVERY COMMIT, WHICH MEANS THAT THE BLOBS CAN TAKE AN INCREASINGLY LARGE PART ON A DISK
HOWEVER, WHEN THE CHANGES ARE PUSHED TO A REMOTE REPOSITORY, AUTOMATICALLY ALL THE DUPLICATE CODE IN THE BLOBS IS THROWN AWAY
THIS CAN ALSO BE DONE MANUALLY USING GARBAGE COLLECTION TOOLS: git gc/git gc --aggressive

AFTER A HARD RESET TO AN EARLIER COMMIT HAS TAKEN PLACE, THE NEWER COMMITS ARE STILL THERE, BUT THE HEAD IS NOW REFERENCING ANOTHER COMMIT. TO RETRIEVE A NEWER COMMIT, THE NEWER COMMIT-ID'S NEED TO BE RETRIEVED: git reflog
WHENEVER THE HEAD IS MOVED, THIS CAN BE TRACKED WITH THE reflog-COMMAND
ANOTHER COMMAND THAT CAN BE USED TO RETRIEVE THE ID OF THE MOST RECENT COMMIT, IS: git fsck --full 
