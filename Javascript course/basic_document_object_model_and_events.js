// THE DOCUMENT OBJECT MODEL (DOM) IS AN OBJECT REPRESENTATION OF AN HTML-DOCUMENT, WHERE EVERY HTML BOX GETS ITS OWN OBJECT
// JAVASCRIPT CAN INTERACT WITH/MANIPULATE THIS DOM WITH METHODS THAT ARE ATTACHED TO THIS DOCUMENT OBJECT
// THIS MEANS THAT INSIDE THE JAVASCRIPT CODE, ONE CAN CALL THE DOCUMENT OBJECT AND CALL .querySelector('#id_given_to_that_element').innerHTML('html_code_to_be_inserted_as_a_string') OR .querySelector('#id_given_to_that_element').textContent('text_to_be_inserted_as_a_string') OR .querySelector('.class_given_to_that_element').innerHTML('html_code_to_be_inserted_as_a_string') OR .querySelector('.class_given_to_that_element').textContent('text_to_be_inserted_as_a_string')
// TO HANDLE EVENTS USE EVENT LISTENERS (FUNCTION WHICH TRIGGERS ON SPECIFIED EVENT):
// - FIRST EXECUTION STACK MUST BE EMPTY/ON GLOBAL
// - THEN EVENTS ARE HANDLED IN THE ORDER THEY ARE PUT IN THE MESSAGE QUEUE
// THE EVENT LISTENER WILL CALL A SPECIFIED FUNCTION FOR US, WHICH IS CALLED A CALL-BACK FUNCTION, SINCE IT IS NOT EXECUTED BY OUR OWN JAVASCRIPT-CODE, BUT RATHER GIVEN AS AN ARGUMENT AND EXECUTED BY OTHER CODE
// ANONYMOUS FUNCTIONS CAN ALSO BE INSERTED IN EVENTLISTENERS, MORE OR LESS LIKE LAMBDA EXPRESSIONS, TO ONLY CALL THE FUNCTION LOCALLY

// HTML:
// CONSISTS OF ELEMENTS (<div> ... </div>), IN WHICH OTHER THINGS CAN BE INCLUDED (CSS OR JAVASCRIPT)
// THESE ELEMENTS CAN HAVE ATTRIBUTES (<div class = "name_class"> ... </div>), class/id IS TO NAME THESE ELEMENTS, WHERE ID IS UNIQUE AND CLASS NEED NOT BE
// CLASS IS ALSO TO CONNECT TO YOUR CSS FILE WHERE THE NAME OF THE CLASS CAN ALSO BE USED TO SET THE STYLE FOR THAT CLASS
// WEB PAGE ALWAYS DIVIDED INTO HEADER AND BODY, HEADER CONTAINS AMONGST OTHERS THE TITLE OF THE PAGE,  LINKS TO OTHER CSS FILES OR PAGES FOR STYLE OR ICONS; THE BODY CONTAINS THE CONTENT OF THE PAGE

// WHEN AN EVENT TRIGGERS, IT TRIGGERS FIRST ON THE LOWEST LEVEL, BUT IT 'BUBBLES' UP (EVENT BUBBLING) IN THE DOM-TREE (FIRST TRIGGERS ON THE TARGET ELEMENT, THEN PARAGRAPH, THEN PLACE ON THE PAGE, ETC.).
// THEREFORE, ONE CAN WAIT FOR AN EVENT TO 'BUBBLE UP' AND THEN HANDLE THE EVENT IN ONE OF THE PARENTS
// ONE WANTS TO DO THIS WHEN A PARENTS HAS MANY CHILDREN THAT CAN FIRE EVENTS, AND IF ONE WANTS AN EVENT HANDLER THAT IS NOT YET IN THE DOM WHEN THE PAGE IS LOADED