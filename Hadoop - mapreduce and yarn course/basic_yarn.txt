YARN (YET ANOTHER RESOURCE NEGOTIATOR)

COMPARED TO MAPREDUCE, YARN SPLITS THE JOBTRACKER INTO RESOURCE MANAGEMENT AND APPLICATIONMASTER
YARN PROVIDES THE CLUSTER RESOURCE MANAGEMENT

THE APPLICATIONMASTER IS RESPONSIBLE FOR ONE SINGLE JOB OR DAG
THESE TASKS RUN IN RESOURCE CONTAINERS OF THE NODE MANAGERS (WHICH HAS DYNAMICALLY CREATED CONTAINERS BASED ON SPEED AND CPU)

SINCE RESOURCE AND APPLICATION IS SPLIT, OTHER TASKS CAN RUN YARN CLUSTERS THAN MAPREDUCE TASKS

FROM MAPREDUCE -> YARN
CLUSTER MANAGER -> RESOURCE MANAGER
JOBTRACKER -> RESOURCE MANAGER + APPLICATIONMASTER
TASKTRACKER -> NODE MANAGER
MAPREDUCE JOB -> DISTRIBUTED APPLICATION
SLOT -> CONTAINER (GENERIC, CAN BE USED FOR MAPPING, REDUCING OR SOMETHING ELSE STILL)

A JOB COMES IN -> RESOURCE MANAGER -> APPLICATIONMASTER IS CREATED (THE APPLICATION MIGHT NEED ONLY THE APPLICATIONMASTER, BUT IN CASE A DISTRIBITED COMPUTATION IS NEEDED) -> APPLICATIONMASTER SENDS RESOURCE REQUEST -> RESOURCE MANAGER SENDS AVAILABLE CONTAINERS

AMBARI IS IMPORTANT, SINCE YARN IS MORE COMPLEX THAN SIMPLE MAPREDUCE
