IN THE PERMISSIONS STRING (E.G.: -rw-rw-r--) THE FIRST CHARACTER CAN BE:
- FOR A REGULAR FILE
d FOR DIRECTORY
l FOR SYMBOLIC LINK
IN THE REMAINDER, THE FOLLOWING CHARACTERS CAN SHOW UP:
[SPECIAL MODE, WHICH CONSISTS OF setuid, setgid AND sticky]
r FOR READ PERMISSION (IN FILE ITSELF, OR THE FILES WITHIN THE DIRECTORY)
w FOR WRITE PERMISSION (IDEM)
x FOR EXECUTE PERMISSION (ALLOWS THE FILE TO BE RUN AS A PROGRAM OR ALLOWS ACCESS TO CONTENT AND METADETA FOR ENTRIES OF A DIRECTORY)
THERE ARE USERS FOR WHICH THESE PERMISSION CAN BE APPLIED:
u USER
g GROUP
o OTHER
a ALL
USERS ON A LINUX SYSTEM BELONG TO AT LEAST ONE GROUP (PRIMARY GROUP), BUT CAN BE MANY.
NOTE THAT ORDER IS MEANINGFUL, SO THE ORDER IS ALWAYS rwx AND ugoa
ALSO NOTE THAT THE PERMISSION DIFFERENCES BETWEEN THE CONTAINING DIRECTORY AND THE FILE ITSELF MAY CAUSE THE FILE NOT TO READ, WRITE OR EXECUTE.

IN THE PERMISSIONS STRING (E.G.: -rw-rw-r--) THE FIRST CHARACTER (-) SIGNIFIES WHAT KIND OF FILE THIS IS. THE NEXT THREE CHARACTERS (rw-) SIGNIFY WHAT THE PERMISSION IS FOR THE OWNER/USER OF THE FILE OR DIRECTORY. THE NEXT THREE CHARACTERS (rw-) SIGNIFY WHAT PERMISSION THE MEMBERS OF THE FILES' GROUP. THE LAST THREE (r--) SIGNIFY WHAT THE PERMISSION IS FOR ALL (OTHER) USERS.
IN OCTAL OR SYMBOLIC NOTATION THE PERMISSIONS STRING (E.G.: -rw-rw-r--) IS NOTATED EITHER BINARY (0110110100) OR AS A DECIMAL (0664).

PERMISSIONS ARE ALSO KNOWN AS MODES, THEREFORE:
chmod (CHANGE MODES)
ugoa (USER GROUP OTHER ALL)
+-= (ADD, SUBTRACT OR SET PERMISSIONS)
rwx (READ, WRITE, EXECUTE)
MORE SPECIFICATIONS CAN BE SEPARATED WITH A COMMA:
chmod a+x, g-x [filename]

TO CHANGE THE GROUP THE FILE BELONGS TO:
chgrp [new_group] [filename]

THE STANDARD PERMISSION WHEN CREATING A NEW FILE OR DIRECTORY IS CALLED FILE MASK AND IS 777 FOR DIRECTORIES AND 666 FOR FILES. TO CHANGE THIS:
umask [-S (symbolic notation)] [mode_to_subtract (E.G.: --w--w-r-- OR -224)]

TO DISPLAY CONTENTS OF A FILE USE:
cat [filename]
more [filename] (BROWSE THROUGH FILE)
less [filename] (IDEM, WITH MORE FEATURES)
head -[number_of_lines_to_be_displayed (DEFAULT 10)] [filename]
tail -[number_of_lines_to_be_displayed (DEFAULT 10)] [filename]
TO SEE CHANGES MADE TO A FILE:
tail -f [filename]

TO FIND FILES:
find [PATH] [-type [d] (FIND DIRECTORIES)] [-name/iname (EXPRESSION TO LOOK FOR (CASE SENSITIVE/INSENSITIVE))] [-ls (PERFORMS ls ON ALL FOUND ITEMS)] [-mtime [+/-number_of_days] (SEARCH FOR FILES THAT ARE OLDER/NEWER THAN number_of_days NUMBER OF DAYS)] [-size [size_in_number] (FINDS FILES OF SIZE size_in_number)] [-newer [filename] (FINDS FILES NEWER THAN filename)] [-exec [command_to_be_executed] {} \; (command_to_be_executed IS COMMAND TO BE EXECUTED ON ALL RESULTS)]
locate [EVERYTHING THE SAME]
locate IS FASTER, BUT MIGHT NOT WORK ON RECENTLY CREATED FILES, WHEREAS find ALSO WORKS IN THAT CASE.

(GRAPHICAL) EDITORS:
EMACS
(G)VIM
GEDIT (DEFAULT EDITOR FOR GNOME)
KEDIT (DEFAULT EDITOR FOR THE KDE)
LIBREOFFICE
KATE